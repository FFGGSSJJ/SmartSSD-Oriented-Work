make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0
 
Makefile:88: /Users/fuguanshujie/Desktop/ZJUI/5_2022SUMMER/VitisDevelopmentResearch/simple_vadd/Makefile/common/includes/opencl/opencl.mk: Not a directory
make: *** No rule to make target `/Users/fuguanshujie/Desktop/ZJUI/5_2022SUMMER/VitisDevelopmentResearch/simple_vadd/Makefile/common/includes/opencl/opencl.mk'.  Stop.


# Make data base, printed on Thu Jul 28 16:48:14 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# makefile (from `Makefile', line 108)
VPP_FLAGS = -t $(TARGET) --platform $(PLATFORM) --save-temps 
# makefile (from `Makefile', line 77)
PACKAGE_OUT = ./package.$(TARGET)
# makefile (from `Makefile', line 57)
TARGET := hw
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile (from `Makefile', line 80)
RESULT_STRING = TEST PASSED
# makefile
CURDIR := /Users/fuguanshujie/Desktop/ZJUI/5_2022SUMMER/VitisDevelopmentResearch/simple_vadd
# makefile (from `utils.mk', line 76)
CXX := g++
# makefile
SHELL = /bin/sh
# makefile (from `utils.mk', line 130)
RM = rm -f
# makefile (from `Makefile', line 53)
COMMON_REPO = $(shell bash -c 'export MK_PATH=$(MK_PATH); echo $${MK_PATH%cpp_kernels/simple_vadd/*}')
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# makefile (from `utils.mk', line 1)
MAKEFILE_LIST :=  Makefile utils.mk
# makefile (from `Makefile', line 121)
CP = cp -rf
# makefile (from `utils.mk', line 6)
DEBUG := no
# makefile (from `Makefile', line 99)
CXXFLAGS = $(opencl_CXXFLAGS) -Wall -O0 -g -std=c++1y -fmessage-length=0
# makefile (from `Makefile', line 83)
VPP_PFLAGS := 
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# environment
VSCODE_CWD = /
# makefile (from `Makefile', line 97)
HOST_SRCS = src/vadd.cpp 
# makefile (from `Makefile', line 82)
VPP := v++
# environment
PATH = /usr/bin:/bin:/usr/sbin:/sbin:/Users/fuguanshujie/Library/Application Support/cloud-code/installer/google-cloud-sdk/bin:/Users/fuguanshujie/google-cloud-sdk/bin
# makefile (from `Makefile', line 114)
EMU_DIR = $(SDCARD)/data/emulation
# makefile (from `Makefile', line 52)
MK_PATH := /Users/fuguanshujie/Desktop/ZJUI/5_2022SUMMER/VitisDevelopmentResearch/simple_vadd/Makefile
# environment
ELECTRON_RUN_AS_NODE = 1
# makefile (from `Makefile', line 100)
LDFLAGS = $(opencl_LDFLAGS) -lrt -lstdc++ 
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# makefile (from `utils.mk', line 133)
ECHO := @echo
# environment
CLOUDSDK_METRICS_ENVIRONMENT = cloudcode.vscode
# makefile (from `Makefile', line 118)
BINARY_CONTAINER_krnl_vadd_OBJS = $(TEMP_DIR)/krnl_vadd.xo
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.hVqXBILWJ8/Listeners
# automatic
%F = $(notdir $%)
# environment
DISPLAY = /private/tmp/com.apple.launchd.Px9PWoQmC6/org.xquartz:0
# environment
CLOUDSDK_METRICS_ENVIRONMENT_VERSION = 1.19.0
# makefile (from `Makefile', line 54)
PWD = $(shell readlink -f .)
# makefile (from `Makefile', line 113)
EMCONFIG_DIR = $(TEMP_DIR)
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# makefile (from `Makefile', line 117)
BINARY_CONTAINERS = $(BUILD_DIR)/krnl_vadd.xclbin
# makefile (from `Makefile', line 79)
LAUNCH_EMULATOR = $(PACKAGE_OUT)/launch_$(TARGET).sh
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /Users/fuguanshujie
# default
MAKEFILEPATH := /Applications/Xcode.app/Contents/Developer/Makefiles
# environment
VSCODE_CODE_CACHE_PATH = /Users/fuguanshujie/Library/Application Support/Code/CachedData/3b889b090b5ad5793f524b5d1d39fda662b96a2a
# environment
LOGNAME = fuguanshujie
# makefile (from `utils.mk', line 118)
device2xsa = $(strip $(patsubst %.xpfm, % , $(shell basename $(PLATFORM))))
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from `Makefile', line 84)
CMD_ARGS = $(BUILD_DIR)/krnl_vadd.xclbin
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from `Makefile', line 67)
TEMP_DIR := ./_x.hw.
# environment
XPC_FLAGS = 0x0
# makefile (from `Makefile', line 85)
SDCARD := sd_card
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# makefile (from `utils.mk', line 131)
RMDIR = rm -rf
# environment
SHLVL = 1
# makefile (from `Makefile', line 55)
XF_PROJ_ROOT = $(shell readlink -f $(COMMON_REPO))
# makefile (from `Makefile', line 68)
BUILD_DIR := ./build_dir.hw.
# default
MAKE_VERSION := 3.81
# environment
USER = fuguanshujie
# makefile
.DEFAULT_GOAL := help
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from `Makefile', line 94)
PLATFORM_BLOCKLIST = nodma 
# default
MAKE_COMMAND := /Applications/Xcode.app/Contents/Developer/usr/bin/make
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/7j/g49fk8cs0qjd2y0fk8y3gt5m0000gn/T/
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /Users/fuguanshujie/Library/Application Support/Code/1.69.2-main.sock
# environment
MallocNanoZone = 0
# makefile
MAKEFLAGS = Rrp
# environment
MFLAGS = -Rrp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.58748819.58748825
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# makefile (from `Makefile', line 86)
vck190_dfx_hw := false
# makefile (from `Makefile', line 70)
LINK_OUTPUT := ./build_dir.hw./krnl_vadd.link.xclbin
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x0
# environment
COMMAND_MODE = unix2003
# default
MAKEFILES := 
# makefile (from `Makefile', line 58)
HOST_ARCH := x86
# automatic
<F = $(notdir $<)
# makefile (from `Makefile', line 112)
EXECUTABLE = ./simple_vadd
# makefile (from `Makefile', line 59)
SYSROOT := 
# environment
LC_ALL = C
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# makefile (from `Makefile', line 63)
XSA := 
# default
.INCLUDE_DIRS = /usr/local/include
# environment
MAKELEVEL := 0
# makefile (from `Makefile', line 76)
RUN_APP_SCRIPT = ./run_app.sh
# environment
LANG = C
# environment
VSCODE_PID = 1491
# variable set hash-table stats:
# Load=97/1024=9%, Rehash=0, Collisions=2/191=1%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777220, inode 54972443): 13 files, no impossibilities.

# 13 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

exe:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `utils.mk', line 126):
	$(ECHO) "WARNING: \"make exe\" is a deprecated command. Please use \"make host\" instead"
	make host
	

README.rst: description.json
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `utils.mk', line 138):
	$(XF_PROJ_ROOT)/common/utility/readme_gen/readme_gen.py description.json
	

all: check-platform check-device check-vitis simple_vadd build_dir.hw./krnl_vadd.xclbin emconfig sd_card
#  Phony target (prerequisite of .PHONY).
#  Command-line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

.PHONY: help all clean cleanall docs emconfig host build xclbin test
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
src/vadd.cpp:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

check-vitis:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `utils.mk', line 33):
	$(error XILINX_VITIS variable is not set, please set correctly using "source <Vitis_install_path>/Vitis/<Version>/settings64.sh" and rerun)
	

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build_dir.hw./krnl_vadd.xclbin: _x.hw./krnl_vadd.xo
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 140):
	mkdir -p $(BUILD_DIR)
	$(VPP) $(VPP_FLAGS) -l $(VPP_LDFLAGS) --temp_dir $(TEMP_DIR) -o'$(LINK_OUTPUT)' $(+)
	$(VPP) -p $(LINK_OUTPUT) $(VPP_FLAGS) --package.out_dir $(PACKAGE_OUT) -o $(BUILD_DIR)/krnl_vadd.xclbin
	

 
# Not a target:
Makefile:
#  Implicit rule search has not been done.
#  Last modified 2022-05-26 14:12:50
#  File has not been updated.

test: simple_vadd
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 182):
	$(EXECUTABLE) $(CMD_ARGS)
	

simple_vadd: src/vadd.cpp | check-xrt
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 150):
	$(CXX) -o $@ $^ $(CXXFLAGS) $(LDFLAGS)
	

build: check-vitis check-device build_dir.hw./krnl_vadd.xclbin
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

check-platform:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `utils.mk', line 113):
	$(error PLATFORM not set. Please set the PLATFORM properly and rerun. Run "make help" for more details.)
	

# Not a target:
/Users/fuguanshujie/Desktop/ZJUI/5_2022SUMMER/VitisDevelopmentResearch/simple_vadd/Makefile/common/includes/opencl/opencl.mk:
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

check-xrt:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `utils.mk', line 40):
	$(error XILINX_XRT variable is not set, please set correctly using "source /opt/xilinx/xrt/setup.sh" and rerun)
	

help::
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 22):
	$(ECHO) "Makefile Usage:"
	$(ECHO) "  make all TARGET=<sw_emu/hw_emu/hw> PLATFORM=<FPGA platform> HOST_ARCH=<aarch32/aarch64/x86> EDGE_COMMON_SW=<rootfs and kernel image path>"
	$(ECHO) "      Command to generate the design for specified Target and Shell."
	$(ECHO) ""
	$(ECHO) "  make clean "
	$(ECHO) "      Command to remove the generated non-hardware files."
	$(ECHO) ""
	$(ECHO) "  make cleanall"
	$(ECHO) "      Command to remove all the generated files."
	$(ECHO) ""
	$(ECHO) "  make test PLATFORM=<FPGA platform>"
	$(ECHO) "      Command to run the application. This is same as 'run' target but does not have any makefile dependency."
	$(ECHO) ""
	$(ECHO) "  make sd_card TARGET=<sw_emu/hw_emu/hw> PLATFORM=<FPGA platform> HOST_ARCH=<aarch32/aarch64/x86> EDGE_COMMON_SW=<rootfs and kernel image path>"
	$(ECHO) "      Command to prepare sd_card files."
	$(ECHO) ""
	$(ECHO) "  make run TARGET=<sw_emu/hw_emu/hw> PLATFORM=<FPGA platform> HOST_ARCH=<aarch32/aarch64/x86> EDGE_COMMON_SW=<rootfs and kernel image path>"
	$(ECHO) "      Command to run application in emulation."
	$(ECHO) ""
	$(ECHO) "  make build TARGET=<sw_emu/hw_emu/hw> PLATFORM=<FPGA platform> HOST_ARCH=<aarch32/aarch64/x86> EDGE_COMMON_SW=<rootfs and kernel image path>"
	$(ECHO) "      Command to build xclbin application."
	$(ECHO) ""
	$(ECHO) "  make host HOST_ARCH=<aarch32/aarch64/x86> EDGE_COMMON_SW=<rootfs and kernel image path>"
	$(ECHO) "      Command to build host application."
	$(ECHO) "      By default, HOST_ARCH=x86. HOST_ARCH and EDGE_COMMON_SW are required for SoC shells. Please download and use the pre-built image from - "
	$(ECHO) "      https://www.xilinx.com/support/download/index.html/content/xilinx/en/downloadNav/embedded-platforms.html"
	$(ECHO) ""
	

xclbin: build
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

_x.hw./emconfig.json:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 154):
	emconfigutil --platform $(PLATFORM) --od $(EMCONFIG_DIR)
	

_x.hw./krnl_vadd.xo: src/krnl_vadd.cpp
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 137):
	mkdir -p $(TEMP_DIR)
	$(VPP) $(VPP_FLAGS) -c -k krnl_vadd --temp_dir $(TEMP_DIR)  -I'$(<D)' -o'$@' '$<'
	

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

gen_run_app:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

run: all
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 167):
	$(EXECUTABLE) $(CMD_ARGS)
	

# Not a target:
src/krnl_vadd.cpp:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 207):
	-$(RMDIR) $(EXECUTABLE) $(XCLBIN)/{*sw_emu*,*hw_emu*} 
	-$(RMDIR) profile_* TempConfig system_estimate.xtxt *.rpt *.csv 
	-$(RMDIR) src/*.ll *v++* .Xil emconfig.json dltmp* xmltmp* *.log *.jou *.wcfg *.wdb
	

docs: README.rst
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
utils.mk:
#  Implicit rule search has not been done.
#  Last modified 2022-05-26 14:12:50
#  File has not been updated.

host: simple_vadd
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

cleanall: clean
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 212):
	-$(RMDIR) build_dir* sd_card*
	-$(RMDIR) package.*
	-$(RMDIR) _x* *xclbin.run_summary qemu-memory-_* emulation _vimage pl* start_simulation.sh *.xclbin
	

check:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `utils.mk', line 122):
	$(ECHO) "WARNING: \"make check\" is a deprecated command. Please use \"make run\" instead"
	make run
	

check-device:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `utils.mk', line 49):
	@set -eu; \
	inallowlist=False; \
	inblocklist=False; \
	if [ "$(PLATFORM_ALLOWLIST)" = "" ]; \
	then inallowlist=True; \
	fi; \
	for dev in $(PLATFORM_ALLOWLIST); \
	do if [[ $$(echo $(PLATFORM) | grep $$dev) != "" ]]; \
	then inallowlist=True; fi; \
	done ;\
	for dev in $(PLATFORM_BLOCKLIST); \
	do if [[ $$(echo $(PLATFORM) | grep $$dev) != "" ]]; \
	then inblocklist=True; fi; \
	done ;\
	if [[ $$inblocklist == True ]]; \
	then echo "[ERROR]: This example is not supported for $(PLATFORM)."; exit 1;\
	fi; \
	if [[ $$inallowlist == False ]]; \
	then echo "[Warning]: The platform $(PLATFORM) not in allowlist."; \
	fi;
	

emconfig: _x.hw./emconfig.json
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
description.json:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

sd_card: build_dir.hw./krnl_vadd.xclbin simple_vadd gen_run_app
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# files hash-table stats:
# Load=33/1024=3%, Rehash=0, Collisions=2/89=2%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 3
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 3953 / max = 3953 / min = 3953 / avg = 3953

# Finished Make data base on Thu Jul 28 16:48:14 2022

 
